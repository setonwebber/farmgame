[gd_resource type="VisualShader" load_steps=24 format=3 uid="uid://p37mi27aq35g"]

[ext_resource type="Texture2D" uid="uid://jcyjhvvxy6c2" path="res://assets/floortexture.jpg" id="1_31r52"]

[sub_resource type="VisualShaderNodeRotationByAxis" id="VisualShaderNodeRotationByAxis_1uuqk"]
default_input_values = [0, Vector3(0, 0, 0), 1, 0.39, 2, Vector3(0, 0, 90)]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_teu1i"]
constant = 15.0

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_3odph"]
function = 1

[sub_resource type="VisualShaderNodeRotationByAxis" id="VisualShaderNodeRotationByAxis_g8uvi"]
default_input_values = [0, Vector3(0, 0, 0), 1, -1.0, 2, Vector3(0, 0, 90)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8fi0v"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_fgqwk"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_48fhi"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="FastNoiseLite" id="FastNoiseLite_cllqp"]
fractal_octaves = 10
fractal_lacunarity = 5.635
fractal_gain = 0.54

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_hi6di"]
noise = SubResource("FastNoiseLite_cllqp")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5w3xe"]
texture = SubResource("NoiseTexture2D_hi6di")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_2teyn"]
seed = 120

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_6vtne"]
noise = SubResource("FastNoiseLite_2teyn")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_p1xbs"]
texture = SubResource("NoiseTexture2D_6vtne")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_igkxr"]
texture = ExtResource("1_31r52")
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6xxy4"]
texture = ExtResource("1_31r52")
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_fgmmy"]
texture = ExtResource("1_31r52")
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_40gpp"]
input_name = "uv"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_8152h"]
function = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_t0w7k"]
constant = 100.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tbb03"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ds0n3"]
constant = 50.0

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_yeejd"]
function = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_20 : source_color;
uniform sampler2D tex_frg_21 : source_color;
uniform sampler2D tex_frg_22 : source_color;
uniform sampler2D tex_frg_18;
uniform sampler2D tex_frg_19;



void fragment() {
// Input:3
	vec2 n_out3p0 = UV;


// FloatConstant:5
	float n_out5p0 = 100.000000;


// UVFunc:4
	vec2 n_in4p2 = vec2(0.00000, 0.00000);
	vec2 n_out4p0 = (n_out3p0 - n_in4p2) * vec2(n_out5p0) + n_in4p2;


// Texture2D:20
	vec4 n_out20p0 = texture(tex_frg_20, n_out4p0);


// Input:6
	vec2 n_out6p0 = UV;


// FloatConstant:7
	float n_out7p0 = 50.000000;


// UVFunc:8
	vec2 n_in8p2 = vec2(0.00000, 0.00000);
	vec2 n_out8p0 = (n_out6p0 - n_in8p2) * vec2(n_out7p0) + n_in8p2;


	vec3 n_out10p0;
	mat4 n_out10p1;
// RotationByAxis:10
	float n_in10p1 = 0.39000;
	vec3 n_in10p2 = vec3(0.00000, 0.00000, 90.00000);
	{
		float __angle = n_in10p1;
		vec3 __axis = normalize(n_in10p2);
		mat3 __rot_matrix = mat3(
			vec3( cos(__angle)+__axis.x*__axis.x*(1.0 - cos(__angle)), __axis.x*__axis.y*(1.0-cos(__angle))-__axis.z*sin(__angle), __axis.x*__axis.z*(1.0-cos(__angle))+__axis.y*sin(__angle) ),
			vec3( __axis.y*__axis.x*(1.0-cos(__angle))+__axis.z*sin(__angle), cos(__angle)+__axis.y*__axis.y*(1.0-cos(__angle)), __axis.y*__axis.z*(1.0-cos(__angle))-__axis.x*sin(__angle) ),
			vec3( __axis.z*__axis.x*(1.0-cos(__angle))-__axis.y*sin(__angle), __axis.z*__axis.y*(1.0-cos(__angle))+__axis.x*sin(__angle), cos(__angle)+__axis.z*__axis.z*(1.0-cos(__angle)) )
		);
		n_out10p0 = vec3(n_out8p0, 0.0) * __rot_matrix;
	}


// Texture2D:21
	vec4 n_out21p0 = texture(tex_frg_21, vec2(n_out10p0.xy));


// Input:15
	vec2 n_out15p0 = UV;


// FloatConstant:11
	float n_out11p0 = 15.000000;


// UVFunc:12
	vec2 n_in12p2 = vec2(0.00000, 0.00000);
	vec2 n_out12p0 = (n_out15p0 - n_in12p2) * vec2(n_out11p0) + n_in12p2;


	vec3 n_out13p0;
	mat4 n_out13p1;
// RotationByAxis:13
	float n_in13p1 = -1.00000;
	vec3 n_in13p2 = vec3(0.00000, 0.00000, 90.00000);
	{
		float __angle = n_in13p1;
		vec3 __axis = normalize(n_in13p2);
		mat3 __rot_matrix = mat3(
			vec3( cos(__angle)+__axis.x*__axis.x*(1.0 - cos(__angle)), __axis.x*__axis.y*(1.0-cos(__angle))-__axis.z*sin(__angle), __axis.x*__axis.z*(1.0-cos(__angle))+__axis.y*sin(__angle) ),
			vec3( __axis.y*__axis.x*(1.0-cos(__angle))+__axis.z*sin(__angle), cos(__angle)+__axis.y*__axis.y*(1.0-cos(__angle)), __axis.y*__axis.z*(1.0-cos(__angle))-__axis.x*sin(__angle) ),
			vec3( __axis.z*__axis.x*(1.0-cos(__angle))-__axis.y*sin(__angle), __axis.z*__axis.y*(1.0-cos(__angle))+__axis.x*sin(__angle), cos(__angle)+__axis.z*__axis.z*(1.0-cos(__angle)) )
		);
		n_out13p0 = vec3(n_out12p0, 0.0) * __rot_matrix;
	}


// Texture2D:22
	vec4 n_out22p0 = texture(tex_frg_22, vec2(n_out13p0.xy));


// Texture2D:18
	vec4 n_out18p0 = texture(tex_frg_18, UV);


// Mix:16
	vec3 n_out16p0 = mix(vec3(n_out21p0.xyz), vec3(n_out22p0.xyz), vec3(n_out18p0.xyz));


// Texture2D:19
	vec4 n_out19p0 = texture(tex_frg_19, UV);


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out20p0.xyz), n_out16p0, vec3(n_out19p0.xyz));


// Output:0
	ALBEDO = n_out17p0;


}
"
nodes/fragment/0/position = Vector2(1480, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_40gpp")
nodes/fragment/3/position = Vector2(-820, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_8152h")
nodes/fragment/4/position = Vector2(-520, 340)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_t0w7k")
nodes/fragment/5/position = Vector2(-780, 480)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_tbb03")
nodes/fragment/6/position = Vector2(-1101.87, 639.326)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_ds0n3")
nodes/fragment/7/position = Vector2(-1061.87, 839.326)
nodes/fragment/8/node = SubResource("VisualShaderNodeUVFunc_yeejd")
nodes/fragment/8/position = Vector2(-801.873, 699.326)
nodes/fragment/10/node = SubResource("VisualShaderNodeRotationByAxis_1uuqk")
nodes/fragment/10/position = Vector2(-541.873, 739.326)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatConstant_teu1i")
nodes/fragment/11/position = Vector2(-1080, 1200)
nodes/fragment/12/node = SubResource("VisualShaderNodeUVFunc_3odph")
nodes/fragment/12/position = Vector2(-820, 1060)
nodes/fragment/13/node = SubResource("VisualShaderNodeRotationByAxis_g8uvi")
nodes/fragment/13/position = Vector2(-560, 1100)
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_8fi0v")
nodes/fragment/15/position = Vector2(-1120, 1000)
nodes/fragment/16/node = SubResource("VisualShaderNodeMix_fgqwk")
nodes/fragment/16/position = Vector2(560, 460)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_48fhi")
nodes/fragment/17/position = Vector2(960, 340)
nodes/fragment/18/node = SubResource("VisualShaderNodeTexture_5w3xe")
nodes/fragment/18/position = Vector2(280, 760)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture_p1xbs")
nodes/fragment/19/position = Vector2(700, 720)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture_igkxr")
nodes/fragment/20/position = Vector2(-200, 280)
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture_6xxy4")
nodes/fragment/21/position = Vector2(-200, 620)
nodes/fragment/22/node = SubResource("VisualShaderNodeTexture_fgmmy")
nodes/fragment/22/position = Vector2(-240, 1040)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 6, 0, 8, 0, 7, 0, 8, 1, 8, 0, 10, 0, 15, 0, 12, 0, 11, 0, 12, 1, 12, 0, 13, 0, 16, 0, 17, 1, 17, 0, 0, 0, 18, 0, 16, 2, 19, 0, 17, 2, 4, 0, 20, 0, 10, 0, 21, 0, 13, 0, 22, 0, 22, 0, 16, 1, 21, 0, 16, 0, 20, 0, 17, 0)
